#if given array contains duplicate return True, else return False

arr1 = [1,2,3,4,5,6]
arr2 = [1,2,3,4,5,6,6]


#solution1
#space complexity = O(n), time complexity = O(n)
def duplicate_finder(arr):
    a = set()
    for i in arr:
        if i in a:
            return True
        a.add(i)
    return False



#solution2
#space complexity = O(n), time complexity = O(n)
def duplicateFinder2(arr):
    a = set(arr)
    if len(arr) == len(a):
        return False
    return True


#solution2(alternate)
#space complexity = O(n), time complexity = O(n)
def duplicate_finder2_alternate(arr):
    return len(arr) != len(set(arr))



#solution3
#space complexity = O(1), time complexity = O(n)
def duplicate_finder3(arr):
    for i in arr:
        if arr.count(i) > 1:
            return True
    return False
    
